# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'c:\Users\Administrator\Desktop\vsqt\untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import  QStackedWidget


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(760, 645)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget_2 = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
        self.widget_2.setSizePolicy(sizePolicy)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.pushButton_6 = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_6.sizePolicy().hasHeightForWidth())
        self.pushButton_6.setSizePolicy(sizePolicy)
        self.pushButton_6.setObjectName("pushButton_6")
        self.horizontalLayout.addWidget(self.pushButton_6)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
        self.pushButton_2.setSizePolicy(sizePolicy)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.pushButton_5 = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_5.sizePolicy().hasHeightForWidth())
        self.pushButton_5.setSizePolicy(sizePolicy)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout.addWidget(self.pushButton_5)
        self.pushButton_4 = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_4.sizePolicy().hasHeightForWidth())
        self.pushButton_4.setSizePolicy(sizePolicy)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout.addWidget(self.pushButton_4)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
        self.pushButton_3.setSizePolicy(sizePolicy)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout.addWidget(self.pushButton_3)
        self.verticalLayout.addWidget(self.widget_2)
        spacerItem = QtWidgets.QSpacerItem(17, 58, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.verticalLayout.addItem(spacerItem)
        stacked_widget = QStackedWidget(self.centralwidget)
        self.label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setText("")
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setScaledContents(True)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        
        # 创建一个新的QWidget作为label和按钮的容器
        container_widget = QtWidgets.QWidget()
        container_layout = QtWidgets.QGridLayout(container_widget) # 使用网格布局以便精确控制位置

        self.pushButton_7 = QtWidgets.QPushButton("上一张")
        self.pushButton_8 = QtWidgets.QPushButton("下一张")

        # 将按钮添加到网格布局的特定位置
        # 假设我们将按钮放在label的顶部，左右两侧，可以根据需要调整row和column
        container_layout.addWidget(self.pushButton_7, 0, 0, alignment=QtCore.Qt.AlignTop | QtCore.Qt.AlignLeft)
        container_layout.addWidget(self.pushButton_8, 0, 1, alignment=QtCore.Qt.AlignTop | QtCore.Qt.AlignRight)
        container_layout.addWidget(self.label, 1, 0, 1, 2) # label占满剩余空间

        # 确保label自适应容器大小
        container_layout.setRowStretch(1, 1) # 让第二行（label所在行）填充剩余空间
        container_layout.setColumnStretch(0, 1) 
        container_layout.setColumnStretch(1, 1)

        stacked_widget.addWidget(container_widget)
        stacked_widget.setCurrentWidget(container_widget)

        self.verticalLayout.addWidget(stacked_widget)
        
        self.horizontalLayout_3.addLayout(self.verticalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 760, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "打开图像"))
        self.pushButton_6.setText(_translate("MainWindow", "打开文件夹"))
        self.pushButton_2.setText(_translate("MainWindow", "打开视频"))
        self.pushButton_5.setText(_translate("MainWindow", "暂停/播放"))
        self.pushButton_4.setText(_translate("MainWindow", "打开摄像头"))
        self.pushButton_3.setText(_translate("MainWindow", "保存图像"))
        self.pushButton_7.setText(_translate("MainWindow", "上一张"))
        self.pushButton_8.setText(_translate("MainWindow", "下一张"))

# class CustomWidget(QtWidgets.QWidget):
#     def __init__(self, parent=None):
#         super().__init__(parent)
#         layout = QtWidgets.QHBoxLayout(self)
#         layout.setContentsMargins(0, 0, 0, 0)
#         layout.setSpacing(0)
        
#         self.label = QtWidgets.QLabel(self)
#         self.label.setSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored) 
#         self.label.setText("")
#         self.label.setTextFormat(QtCore.Qt.AutoText)
#         self.label.setScaledContents(True)
#         self.label.setAlignment(QtCore.Qt.AlignCenter)
#         self.label.setObjectName("label")
        
#         self.pushButton_7 = QtWidgets.QPushButton("上一张")
#         self.pushButton_8 = QtWidgets.QPushButton("下一张")
        
#         self.pushButton_7.setStyleSheet("background-color: rgba(0, 0, 0, 0);") # 设置透明背景
#         self.pushButton_8.setStyleSheet("background-color: rgba(0, 0, 0, 0);")
        
#         # 安装事件过滤器，使得鼠标事件可以穿透按钮到达label
#         self.pushButton_7.installEventFilter(self)
#         self.pushButton_8.installEventFilter(self)
        
#         layout.addStretch(1)
#         layout.addWidget(self.pushButton_7)
#         layout.addWidget(self.label)
#         layout.addWidget(self.pushButton_8)
#         layout.addStretch(1)

#     def eventFilter(self, obj, event):
#         """Event filter to make buttons 'click-through'."""
#         if obj in (self.pushButton_7, self.pushButton_8) and event.type() == QtCore.QEvent.MouseButtonPress:
#             # Forward the event to the label if it's a click on one of the buttons
#             QtCore.QCoreApplication.sendEvent(self.label, event)
#             return True  # Indicate that we have handled the event
#         return super().eventFilter(obj, event)